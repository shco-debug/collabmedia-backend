{
	"info": {
		"_postman_id": "collabmedia-media-api",
		"name": "CollabMedia Media API",
		"description": "Complete API collection for testing CollabMedia Media endpoints including file upload, link upload, editing, viewing, deletion operations, and Single Post CRUD operations. IMPORTANT: For complete media setup, use the flow: 1) uploadLink → 2) addTagsToUploadedMedia",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "collabmedia-media-api"
	},
	"item": [
		{
			"name": "Media Management",
			"item": [
				{
					"name": "Upload Media File",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "myFile",
									"type": "file",
									"src": []
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/massmediaupload/add",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"massmediaupload",
								"add"
							]
						},
						"description": "Upload a media file (image, video, audio, or document). Requires admin/subadmin session. File will be processed and thumbnails generated for images. Returns updated media list."
					},
					"response": []
				},
				{
					"name": "Upload Media Link",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"type\": \"Link\",\n  \"linkType\": \"website\",\n  \"thumbnail\": \"https://example.com/thumb.jpg\",\n  \"url\": \"https://example.com/media\",\n  \"title\": \"Sample Media Link\",\n  \"description\": \"Description of the media link\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/media/uploadLink",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"media",
								"uploadLink"
							]
						},
						"description": "Upload a media link (URL, Notes, or Montage). Requires admin/subadmin session. Supports different link types and custom thumbnails."
					},
					"response": []
				},
				{
					"name": "View All Media (Basic)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"\",\n  \"gt\": \"\",\n  \"collection\": \"\",\n  \"offset\": 0,\n  \"limit\": 20\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/massmediaupload/view",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"massmediaupload",
								"view"
							]
						},
						"description": "View all media with optional filtering by title, group tags, and collections. Supports pagination with offset and limit parameters. Returns media with Status=1 only."
					},
					"response": []
				},
				{
					"name": "View All Media (All Status)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"offset\": 0,\n  \"limit\": 100,\n  \"keywordsSearch\": [],\n  \"addAnotherTag\": [],\n  \"excludeWord\": [],\n  \"mmt\": \"\",\n  \"mt\": \"\",\n  \"gt\": \"\",\n  \"collection\": \"\",\n  \"domain\": \"\",\n  \"source\": \"\",\n  \"status\": \"\",\n  \"mediaType\": \"\",\n  \"whereAdded\": \"\",\n  \"howAdded\": \"\",\n  \"tagtype\": \"\",\n  \"Media\": \"\",\n  \"locator\": \"\",\n  \"dtStart\": \"\",\n  \"dtEnd\": \"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/massmediaupload/view/all",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"massmediaupload",
								"view",
								"all"
							]
						},
						"description": "View all media with comprehensive filtering options. Uses 'media' collection. Returns media with all status types (not deleted or status 2/3)."
					},
					"response": []
				},
						{
					"name": "Search Media by Locator",
					"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
							"raw": "{\n  \"Media\": \"uploadImageTool\",\n  \"locator\": \"record\",\n  \"domain\": \"\",\n  \"status\": \"\",\n  \"gt\": \"\",\n  \"collection\": \"\",\n  \"mmt\": \"\",\n  \"mt\": \"\",\n  \"whereAdded\": \"\",\n  \"tagtype\": \"\",\n  \"howAdded\": \"\",\n  \"mediaType\": \"\",\n  \"source\": \"\",\n  \"keywordsSearch\": [],\n  \"addAnotherTag\": [],\n  \"excludeWord\": [],\n  \"dtStart\": \"\",\n  \"dtEnd\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
							"raw": "{{base_url}}/massmediaupload/searchByLocatorList",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"massmediaupload",
								"searchByLocatorList"
							]
						},
						"description": "Search media by locator with regex matching. Returns only _id, AutoId, and Locator fields. Limit: 1000 results."
					},
					"response": []
				},
				{
					"name": "Edit Media",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"{{media_id}}\",\n  \"title\": \"Updated Media Title\",\n  \"description\": \"Updated description\",\n  \"groupTags\": [\"{{group_tag_id_1}}\", \"{{group_tag_id_2}}\"],\n  \"collections\": [\"{{collection_id_1}}\", \"{{collection_id_2}}\"]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/massmediaupload/edit",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"massmediaupload",
								"edit"
							]
						},
						"description": "Edit a single media item by ID. Update title, description, group tags, and collections. Requires admin/subadmin session."
					},
					"response": []
				},
				{
					"name": "Bulk Edit Media",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ids\": [\"{{media_id_1}}\", \"{{media_id_2}}\"],\n  \"groupTags\": [\"{{group_tag_id_1}}\", \"{{group_tag_id_2}}\"],\n  \"collections\": [\"{{collection_id_1}}\", \"{{collection_id_2}}\"]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/massmediaupload/editall",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"massmediaupload",
								"editall"
							]
						},
						"description": "Bulk edit multiple media items with the same metadata. Useful for applying consistent tags and collections across multiple media files."
					},
					"response": []
				},
				{
					"name": "Edit Media Tags",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"mediaId\": \"{{media_id}}\",\n  \"groupTags\": [\"{{group_tag_id_1}}\", \"{{group_tag_id_2}}\"],\n  \"metaTags\": [\"{{meta_tag_id_1}}\", \"{{meta_tag_id_2}}\"],\n  \"metaMetaTags\": [\"{{meta_meta_tag_id_1}}\", \"{{meta_meta_tag_id_2}}\"]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/massmediaupload/editTag",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"massmediaupload",
								"editTag"
							]
						},
						"description": "Update only the tags for a specific media item. Modify group tags, meta tags, and meta meta tags without changing other properties."
					},
					"response": []
				},
				{
					"name": "Add Tags to Uploaded Media",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"MediaID\": \"{{media_id}}\",\n  \"mmt\": \"{{meta_meta_tag_id}}\",\n  \"gt\": \"{{group_tag_id_1}}\",\n  \"Tags\": \"tag1,tag2,tag3\",\n  \"isPrivate\": 0,\n  \"data\": {\n    \"MediaType\": \"Link\",\n    \"ContentType\": \"Link\",\n    \"thumbnail\": \"https://example.com/thumb.jpg\"\n  },\n  \"board\": \"{{board_id}}\",\n  \"gtsa\": \"Sample Group Tag\",\n  \"owner\": \"{{user_id}}\",\n  \"Statement\": \"Sample statement for the media\",\n  \"Themes\": [],\n  \"IsOnlyForOwner\": false,\n  \"PostPrivacySetting\": \"PublicWithoutName\",\n  \"IsUnsplashImage\": false,\n  \"TaggedUsers\": [],\n  \"IsAddedFromStream\": false,\n  \"StreamId\": null,\n  \"IsPostForUser\": false,\n  \"IsPostForTeam\": false,\n  \"QuestionPostId\": null\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/media/addTagsToUploadedMedia",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"media",
								"addTagsToUploadedMedia"
							]
						},
						"description": "Add tags, metatags, and manage board relationships for uploaded media. This endpoint is called after uploadLink to complete the media setup with tags, privacy settings, and board integration. Supports Montage special handling and theme management. IMPORTANT: The 'owner' field is used to fetch the user's FSGs instead of relying on session data."
					},
					"response": []
				},
				{
					"name": "Delete Media",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"mediaId\": \"{{media_id}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/massmediaupload/delete",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"massmediaupload",
								"delete"
							]
						},
						"description": "Delete a media item by ID. This will remove the media from the system and clean up associated files and thumbnails."
					},
					"response": []
				}
			]
		},
		{
			"name": "Board Post CRUD (Legacy)",
			"description": "Complete CRUD operations for posts within boards. Posts are embedded in the board's Medias array. NOTE: The updatePost route was missing and has now been added.",
			"item": [
				{
					"name": "Create Post (Add Media to Board)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"{{board_id}}\",\n  \"media\": \"{{media_id}}\",\n  \"url\": \"https://example.com/image.jpg\",\n  \"title\": \"Sample Post Title\",\n  \"prompt\": \"Sample post prompt or description\",\n  \"locator\": \"sample_locator_123\",\n  \"themeId\": \"{{theme_id}}\",\n  \"theme\": \"Sample Theme Title\",\n  \"data\": {\n    \"value\": {\n      \"MediaType\": \"Image\",\n      \"ContentType\": \"image/jpeg\",\n      \"Content\": \"Sample content for the post\"\n    }\n  },\n  \"owner\": \"{{user_id}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/board/addMedia",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"board",
								"addMedia"
							]
						},
						"description": "Create a new post by adding media to a board. The post will be embedded in the board's Medias array. Requires user session. Returns success confirmation and updated board data."
					},
					"response": []
				},
				{
					"name": "Update Post",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"{{board_id}}\",\n  \"PostId\": \"{{post_id}}\",\n  \"media\": \"{{media_id}}\",\n  \"url\": \"https://example.com/updated-image.jpg\",\n  \"title\": \"Updated Post Title\",\n  \"prompt\": \"Updated post prompt\",\n  \"locator\": \"updated_locator_456\",\n  \"themeId\": \"{{theme_id}}\",\n  \"theme\": \"Updated Theme Title\",\n  \"data\": {\n    \"value\": {\n      \"MediaType\": \"Image\",\n      \"ContentType\": \"image/jpeg\",\n      \"Content\": \"Updated content for the post\"\n    }\n  },\n  \"Content\": \"Updated content for the post\",\n  \"owner\": \"{{user_id}}\",\n  \"thumbnail\": \"https://example.com/thumb.jpg\",\n  \"Statement\": \"Updated post statement\",\n  \"IsOnlyForOwner\": false,\n  \"PostPrivacySetting\": \"PublicWithoutName\",\n  \"IsUnsplashImage\": false,\n  \"Themes\": [],\n  \"TaggedUsers\": [],\n  \"Label\": \"{{label_id}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/board/updatePost",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"board",
								"updatePost"
							]
						},
						"description": "✅ NOW AVAILABLE - Update an existing post within a board. Updates all post fields including title, prompt, content, privacy settings, and themes. Requires user session. Returns updated post data. WARNING: Uses deprecated Mongoose methods and session-only auth (no JWT support)."
					},
					"response": []
				},
				{
					"name": "Read Post (Get Board Details)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"{{board_id}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/board/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"board"
							]
						},
						"description": "Get all posts from a board. Returns the complete board data including all posts in the Medias array. Requires user session. Returns board with populated post data."
					},
					"response": []
				},
				{
					"name": "Delete Post",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"{{board_id}}\",\n  \"post_id\": \"{{post_id}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/board/deleteMedia",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"board",
								"deleteMedia"
							]
						},
						"description": "Delete a specific post from a board. Removes the post from the board's Medias array and cleans up associated PageStream data. Requires user session. Returns success confirmation."
					},
					"response": []
				},
				{
					"name": "Update Post Label",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"post_id\": \"{{post_id}}\",\n  \"label_id\": \"{{label_id}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/journal/updatePostLabelId",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"journal",
								"updatePostLabelId"
							]
						},
						"description": "Update the label for a specific post. Can set or remove labels. Updates both regular and dashed edit pages. Requires user session. Returns success confirmation."
					},
					"response": []
				},
				{
					"name": "Update Post Link URL",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"PostId\": \"{{post_id}}\",\n  \"PostLinkUrl\": \"AdPost\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/journal/updatePostLinkUrl",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"journal",
								"updatePostLinkUrl"
							]
						},
						"description": "Update the link URL type for a post. Possible values: AdPost, BroadcastPost, Post. Updates both regular and dashed edit pages. Requires user session. Returns success confirmation."
					},
					"response": []
				}
			]
		},
		{
			"name": "Modern Post API (Recommended)",
			"description": "⭐ RECOMMENDED - Modern post endpoints with async/await, JWT support, optimal partial updates, and better error handling. Use these instead of the legacy board endpoints.",
			"item": [
				{
					"name": "Create Single Post",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"streamId\": \"{{stream_id}}\",\n  \"title\": \"My Amazing Post\",\n  \"content\": \"This is the content of my post\",\n  \"postType\": \"image\",\n  \"postStatement\": \"This represents my thoughts\",\n  \"mediaArray\": [\n    {\n      \"url\": \"https://example.com/image1.jpg\",\n      \"type\": \"image\"\n    }\n  ],\n  \"keywords\": [\"nature\", \"sunset\"],\n  \"pageId\": \"{{page_id}}\",\n  \"blendSettings\": {\n    \"blendImage1\": \"https://example.com/image1.jpg\",\n    \"blendImage2\": \"https://example.com/image2.jpg\",\n    \"blendRatio\": 0.5\n  },\n  \"metadata\": {}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/media/createSinglePost",
							"host": ["{{base_url}}"],
							"path": ["media", "createSinglePost"]
						},
						"description": "✅ MODERN - Create a single post with media. Supports image blending, S3 uploads with multiple sizes, JWT auth, and comprehensive error handling. Can be added to a page or created independently."
					},
					"response": []
				},
				{
					"name": "Update Post (Optimized)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"PostId\": \"{{post_id}}\",\n  \"id\": \"{{board_id}}\",\n  \"media\": \"{{media_id}}\",\n  \"MediaID\": \"{{media_id}}\",\n  \"url\": null,\n  \"title\": \"Updated Title\",\n  \"prompt\": \"Updated prompt\",\n  \"locator\": \"032720254349_73827\",\n  \"data\": {\n    \"value\": {\n      \"MediaType\": \"Notes\",\n      \"ContentType\": \"Notes\"\n    }\n  },\n  \"Content\": \"<div>Your updated HTML content here...</div>\",\n  \"owner\": \"{{user_id}}\",\n  \"thumbnail\": \"https://example.com/thumb.jpg\",\n  \"Statement\": \"Updated post statement\",\n  \"PostPrivacySetting\": \"PublicWithoutName\",\n  \"IsUnsplashImage\": false,\n  \"PostType\": \"Post\",\n  \"IsOnetimeStream\": false,\n  \"Themes\": [],\n  \"TaggedUsers\": [],\n  \"Label\": \"{{label_id}}\",\n  \"Location\": [\n    {\n      \"Size\": \"2.86 MB\",\n      \"URL\": \"https://scrpt.s3.amazonaws.com/scrptMedia/uploadedMedia/aspectfit/image.png\"\n    }\n  ],\n  \"BlendSettings\": {\n    \"image1Url\": \"https://example.com/img1.jpg\",\n    \"image2Url\": \"https://example.com/img2.jpg\",\n    \"blendRatio\": 0.5,\n    \"blendMode\": \"screen\"\n  },\n  \"Action\": \"Post\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/media/updatePost",
							"host": ["{{base_url}}"],
							"path": ["media", "updatePost"]
						},
						"description": "✅ NEW & OPTIMAL - Update an existing post with intelligent partial updates. Only updates fields that are provided, leaving others unchanged. Supports JWT & session auth, updates both regular and IsDasheditpage versions, and maintains mediaActionLogs. This is the modern replacement for /board/updatePost."
					},
					"response": []
				},
				{
					"name": "Get User Posts",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userId\": \"{{user_id}}\",\n  \"offset\": 0,\n  \"limit\": 20\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/media/getUserPosts",
							"host": ["{{base_url}}"],
							"path": ["media", "getUserPosts"]
						},
						"description": "✅ MODERN - Get posts created by a user with pagination and filtering."
					},
					"response": []
				},
				{
					"name": "Update Post Privacy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"postId\": \"{{post_id}}\",\n  \"privacySetting\": \"PublicWithName\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/media/updatePostPrivacy",
							"host": ["{{base_url}}"],
							"path": ["media", "updatePostPrivacy"]
						},
						"description": "✅ MODERN - Update post privacy. Valid settings: PublicWithName, PublicWithoutName, OnlyForOwner, InvitedFriends"
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:3002",
			"type": "string"
		},
		{
			"key": "token",
			"value": "",
			"type": "string"
		},
		{
			"key": "media_id",
			"value": "your_media_id_here",
			"type": "string"
		},
		{
			"key": "board_id",
			"value": "your_board_id_here",
			"type": "string"
		},
		{
			"key": "user_id",
			"value": "your_user_id_here",
			"type": "string"
		},
		{
			"key": "post_id",
			"value": "your_post_id_here",
			"type": "string"
		},
		{
			"key": "theme_id",
			"value": "your_theme_id_here",
			"type": "string"
		},
		{
			"key": "label_id",
			"value": "your_label_id_here",
			"type": "string"
		},
		{
			"key": "page_id",
			"value": "your_page_id_here",
			"type": "string"
		},
		{
			"key": "stream_id",
			"value": "your_stream_id_here",
			"type": "string"
		},
		{
			"key": "group_tag_id_1",
			"value": "your_group_tag_id_here",
			"type": "string"
		}
	]
}
